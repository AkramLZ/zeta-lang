struct Ptr<T>(raw: u64) {
    // Constructors / queries
    static null() -> Ptr<T> = __ptr_null<T>();

    static new<T>(T value) -> Ptr<T> = Ptr(__ptr_cast_to_raw(value))

    is_null() -> boolean = __ptr_is_null<T>(self);

    unsafe add(bytes: u64) -> Ptr<T> = __ptr_add<T>(self, bytes);

    deref() -> T = __ptr_deref<T>(self);
    store(value: T) = __ptr_store<T>(self, value);
}

// --- Intrinsics surface (compiler-provided) ---
internal extern "intrinsic" fn __ptr_null<T>() -> Ptr<T>;
internal extern "intrinsic" fn __ptr_is_null<T>(Ptr<T> p) -> boolean;
internal extern "intrinsic" fn __ptr_cast_to_raw<T>(T value) -> boolean;
internal extern "intrinsic" fn __ptr_add<T>(Ptr<T> p, u64 bytes) -> Ptr<T>;
internal extern "intrinsic" fn __ptr_deref<T>(Ptr<T> p) -> T;
internal extern "intrinsic" fn __ptr_store<T>(Ptr<T> p, T value);

internal extern "intrinsic" fn __ptr_from_addr<T>(u64 addr) -> Ptr<T>;
internal extern "intrinsic" fn __ptr_addr<T>(Ptr<T> p) -> u64;
